---
name: Release

on:
  push:
    branches:
      - release-*
      - main
    paths-ignore:
      - "**.md"
      - "LICENSE"
  workflow_dispatch:
    inputs:
      git-ref:
        description: git ref
        required: true

jobs:
  release:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        os:
          - "linux"
        arch:
          - "amd64"
          - "arm64"
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Go 1.20
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.x
      - name: Build for ${{ matrix.os }}-${{ matrix.arch }}
        id: build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          export REL_VER=`git describe --tags --always`
          echo ::set-output name=REL_VER::$REL_VER

          make build
          echo "Build success."

          mv bin/tidb2dw bin/tidb2dw-${{ steps.build.outputs.REL_VER }}-${{ matrix.os }}-${{ matrix.arch }}
      - name: Upload
        uses: ncipollo/release-action@v1
        # if: github.event_name == 'release'
        with:
          allowUpdates: true
          artifacts: bin/tidb2dw-${{ steps.build.outputs.REL_VER }}-${{ matrix.os }}-${{ matrix.arch }}
          artifactContentType: application/gzip
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
